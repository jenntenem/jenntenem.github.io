---
import { Icon } from "astro-icon";

// Menu Data
const myMenu = [
  { name: "Home", url: "/" },
  // { name: "About Me", url: "#about" },
  // { name: "Contact", url: "#contact" },
  { name: "Projects", url: "#projects" },
  {
    name: "logo-github",
    icon: "logo-github",
    url: "https://github.com/jenntenem",
  },
];
---

<header>
  <div class="menu-container">
    <!-- Logo -->
    <a href="/" id="logo">
      <img
        src={(await import("../assets/img/logo.svg")).default}
        alt="My Logo"
        width="47"
        height="37"
      />
    </a>
    <!-- Button Menu -->
    <button
      class="mobile-nav-toggle"
      aria-controls="primary-navigation"
      aria-expanded="false"
    >
      <span class="src-only"></span>
      <Icon
        name="icon-park-outline:hamburger-button"
        class="icon-menu"
        id="data-visible-show"
      />
      <Icon name="mi:close" class="icon-menu" id="data-visible-close" />
    </button>
    <!-- Menu -->
    <div class="wrapper">
      <nav>
        <ul
          id="primary-navigation"
          data-visible="false"
          class="primary-navigation"
        >
          {
            myMenu.map((item) => (
              <li id={item.name}>
                <a
                  href={item.url}
                  aria-label={item.name}
                  target={item.icon ? "_blank" : "_self"}
                >
                  {!item.icon && item.name}
                  {item.icon && <Icon pack="ion" name="logo-github" />}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
      <!-- <button id="theme-toggle">
        <Icon name="iconoir:moon-sat" class="icon" id="dark-mode" />
        <Icon name="iconoir:sun-light" class="icon" id="light-mode" />
      </button> -->
    </div>
  </div>
</header>

<script>
  // Add class to header when scrolling (for background color)
  window.addEventListener("scroll", function () {
    var header = document.querySelector("header");

    window.scrollY > 0
      ? header.classList.add("scroller")
      : header.classList.remove("scroller");
  });

  // Mobile Menu
  const primaryNav = document.querySelector(".primary-navigation");
  const navToggle = document.querySelector(".mobile-nav-toggle");

  var showMenu = document.getElementById("data-visible-show");
  var closeMenu = document.getElementById("data-visible-close");
  showMenu.style.display = "block";
  closeMenu.style.display = "none";

  navToggle.addEventListener("click", () => {
    const visibility = primaryNav.getAttribute("data-visible");
    const expanded = visibility == "true" || false;

    //@ts-ignore
    primaryNav.setAttribute("data-visible", !expanded);
    //@ts-ignore
    navToggle.setAttribute("aria-expanded", !expanded);

    var showMenu = document.getElementById("data-visible-show");
    var closeMenu = document.getElementById("data-visible-close");
    closeMenu.style.display = !expanded ? "block" : "none";
    showMenu.style.display = expanded ? "block" : "none";
  });

  // Dark and Light Mode
  var toggle = document.getElementById("theme-toggle");
  var storedTheme =
    localStorage.getItem("theme") ||
    (window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light");
  if (storedTheme)
    document.documentElement.setAttribute("data-theme", storedTheme);

  var darkIcon = document.getElementById("dark-mode");
  var lightIcon = document.getElementById("light-mode");
  if (storedTheme === "light") {
    darkIcon.style.display = "none";
    lightIcon.style.display = "block";
  } else {
    lightIcon.style.display = "none";
    darkIcon.style.display = "block";
  }

  toggle.onclick = function () {
    var currentTheme = document.documentElement.getAttribute("data-theme");
    var targetTheme = "light";

    var darkIcon = document.getElementById("dark-mode");
    var lightIcon = document.getElementById("light-mode");

    if (currentTheme === "light") {
      targetTheme = "dark";
      darkIcon.style.display = "block";
      lightIcon.style.display = "none";
    } else {
      lightIcon.style.display = "block";
      darkIcon.style.display = "none";
    }

    document.documentElement.setAttribute("data-theme", targetTheme);
    localStorage.setItem("theme", targetTheme);
  };
</script>

<style lang="scss">
  @use "../../assets/scss/base/_container" as *;
  @use "../../assets/scss/base/_breakpoint" as *;
  @use "../../assets/scss/base/_mixins" as *;

  header {
    position: fixed;
    letter-spacing: 2px;
    width: 100%;

    .menu-container {
      left: 50%;
      @extend .container;
      @include flex-row();
      flex-wrap: wrap;
      align-items: center;

      @include max-breakpoint(medium) {
        @include flex-column();

        #logo {
          padding: 1.5rem 0;
        }
      }

      .wrapper {
        display: flex;
        align-items: center;
        gap: 1rem;

        nav {
          ul.primary-navigation {
            display: flex;
            gap: 1.5rem;
            list-style-type: none;
            #logo-github {
              width: 30px;
              height: 30px;
            }
          }

          // Menu Items when is mobile view
          @include max-breakpoint(medium) {
            ul.primary-navigation {
              display: block;
              background-color: red;
              inset: 0 0 0 30%;
              background: hsl(0 0% 100% / 0.1); //hsl(0 0% 0% / 0.5);
              backdrop-filter: blur(1rem);

              position: fixed;
              z-index: 1000;
              flex-direction: column;
              padding: min(20vh, 10rem) 2em;
              margin: 0;

              font-size: 1.1em;
              --gap: 2em;

              transform: translateX(0%);
              transition: transform 350ms ease-out;
            }

            .primary-navigation[data-visible="false"] {
              display: none;
              transform: translate(0%);
            }

            @support (backdrop-filter: blur(1rem)) {
              ul {
                background: hsl(0 0% 100% / 0.1);
                backdrop-filter: blur(1rem);
              }
            }
          }
        }

        // Theme Toggle
        button {
          background-color: transparent;
          border: none;
          cursor: pointer;
          transition: color 0.15s ease-in-out;
          border-radius: 100%;
          color: #f3f6fb;

          > .icon {
            width: 25px;
            height: 25px;
          }

          &:hover,
          &:focus {
            color: #f3f6fb;
          }
        }

        button#light-mode,
        button#dark-mode {
          display: none;
        }
      }

      // Button Menu
      .icon-menu {
        width: 30px;
        height: 30px;
      }
    }
  }

  // Scrolling Header
  header.scroller {
    background-color: #0d1117;
    box-shadow: 0 0 10px rgba(#0d1117, 0.3);
    background-blend-mode: overlay;
    transition: background-color 0.5s ease-in-out;
  }

  // Mobile Menu
  .mobile-nav-toggle {
    // background-color: transparent;
    display: none;

    @include max-breakpoint(medium) {
      display: block;
      position: absolute;
      z-index: 9999;
      background-position: center;
      background-color: transparent;
      background-size: cover;
      color: white; //black;
      background-repeat: no-repeat;
      width: 2rem;
      border: 0;
      aspect-ratio: 1;
      top: 1.5em;
      right: 1.5em;
    }
  }
</style>
