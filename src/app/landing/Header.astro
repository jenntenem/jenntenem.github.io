---
import { Icon } from "astro-icon";

// Menu Data
const myMenu = [
  { name: "Home", url: "/" },
  // { name: "About Me", url: "#about" },
  // { name: "Contact", url: "#contact" },
  { name: "Projects", url: "#projects" },
  {
    name: "logo-github",
    icon: "logo-github",
    url: "https://github.com/jenntenem",
  },
];
---

<header>
  <div class="menu-container">
    <!-- Logo -->
    <a href="/">
      <img
        src={(await import("../assets/img/logo.svg")).default}
        alt="My Logo"
        width="47"
        height="37"
      />
    </a>
    <!-- Menu -->
    <div class="wrapper">
      <nav>
        <ul>
          {
            myMenu.map((item) => (
              <li id={item.name}>
                <a
                  href={item.url}
                  aria-label={item.name}
                  target={item.icon ? "_blank" : "_self"}
                >
                  {!item.icon && item.name}
                  {item.icon && <Icon pack="ion" name="logo-github" />}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
      <button id="theme-toggle">
        <Icon name="iconoir:moon-sat" class="icon" id="dark-mode" />
        <Icon name="iconoir:sun-light" class="icon" id="light-mode" />
      </button>
    </div>
  </div>
</header>

<script>
  // Add class to header when scrolling (for background color)
  window.addEventListener("scroll", function () {
    var header = document.querySelector("header");

    window.scrollY > 0
      ? header.classList.add("scroller")
      : header.classList.remove("scroller");
  });

  // Dark and Light Mode
  var toggle = document.getElementById("theme-toggle");
  var storedTheme =
    localStorage.getItem("theme") ||
    (window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light");
  if (storedTheme)
    document.documentElement.setAttribute("data-theme", storedTheme);

  var darkIcon = document.getElementById("dark-mode");
  var lightIcon = document.getElementById("light-mode");
  if (storedTheme === "light") {
    darkIcon.style.display = "none";
    lightIcon.style.display = "block";
  } else {
    lightIcon.style.display = "none";
    darkIcon.style.display = "block";
  }

  toggle.onclick = function () {
    var currentTheme = document.documentElement.getAttribute("data-theme");
    var targetTheme = "light";

    var darkIcon = document.getElementById("dark-mode");
    var lightIcon = document.getElementById("light-mode");

    if (currentTheme === "light") {
      targetTheme = "dark";
      darkIcon.style.display = "block";
      lightIcon.style.display = "none";
    } else {
      lightIcon.style.display = "block";
      darkIcon.style.display = "none";
    }

    document.documentElement.setAttribute("data-theme", targetTheme);
    localStorage.setItem("theme", targetTheme);
  };
</script>

<style lang="scss">
  @use "../../assets/scss/base/_container" as *;

  header {
    position: fixed;
    letter-spacing: 2px;
    width: 100%;

    .menu-container {
      @extend .container;
      left: 50%;
      padding: 0;
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;
      align-items: center;

      .wrapper {
        display: flex;
        align-items: center;
        gap: 1rem;

        nav {
          ul {
            display: flex;
            gap: 1.5rem;
            list-style-type: none;
            #logo-github {
              width: 30px;
              height: 30px;
            }
          }
        }

        button {
          background-color: transparent;
          border: none;
          cursor: pointer;
          transition: color 0.15s ease-in-out;
          border-radius: 100%;
          color: #f3f6fb;

          > .icon {
            width: 25px;
            height: 25px;
          }

          &:hover,
          &:focus {
            color: #f3f6fb;
          }
        }

        button#light-mode,
        button#dark-mode {
          display: none;
        }
      }

      a,
      button {
        text-decoration: none;
        font-size: 1.125rem;
        line-height: 1.6875rem;
        transition: color 0.15s ease-in-out;
      }

      a {
        color: #f3f6fb;
        &:hover,
        &:focus {
          text-decoration: underline;
          text-decoration-thickness: 1px;
          // text-decoration-style: wavy;
          text-underline-offset: 7px;
          font-weight: bold;
        }

        &:visited,
        &:active {
          color: #f3f6fb;
        }
      }
    }
  }

  header.scroller {
    background-color: #0d1117;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.35);
    background-blend-mode: overlay;
    transition: background-color 0.5s ease-in-out;
  }
</style>
