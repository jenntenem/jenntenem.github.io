---
import { Icon } from "astro-icon";

// Data
const skillSet = [
  {
    title: "Git Version Control",
    description: "This is a project I worked on.",
    content:
      "Lorem ipsum dolor sit amet consectetur adipisicing elit. Est corrupti repudiandae animi.",
    icon: {
      pack: "mdi",
      name: "github",
    },
  },
  {
    title: "Web Development",
    description: "This is a project I worked on.",
    content:
      "Lorem ipsum dolor sit amet consectetur adipisicing elit. Est corrupti repudiandae animi. Lorem ipsum dolor sit amet consectetur adipisicing elit. Est corrupti repudiandae animi.",
    icon: {
      pack: "ph",
      name: "globe-thin",
    },
  },
  {
    title: "Back-end Development",
    description: "This is a project I worked on.",
    link: "https://google.com",
    content:
      "Lorem ipsum dolor sit amet consectetur adipisicing elit. Est corrupti repudiandae animi.",
    icon: {
      pack: "",
      name: "tabler:server",
    },
  },
  {
    title: "Freelance",
    description: "This is a project I worked on.",
    link: "https://google.com",
    content:
      "Lorem ipsum dolor sit amet consectetur adipisicing elit. Est corrupti repudiandae animi.",
    icon: {
      pack: "",
      name: "bytesize:work",
    },
  },
];
---

<section>
  <div class="container">
    <h2>My services</h2>
    <div class="skill-set">
      {
        skillSet.map((project) => {
          return (
            <div class="card skill mouse-cursor-gradient-trackin hiddenx">
              <div>
                <Icon
                  pack={project.icon.pack}
                  name={project.icon.name}
                  class="icon"
                />
              </div>
              <h3>{project.title}</h3>
              <p>{project.content}</p>
            </div>
          );
        })
      }
    </div>
  </div>
</section>
<script>
  let buttons = document.querySelectorAll(".mouse-cursor-gradient-tracking");
  buttons.forEach((button) => {
    button.addEventListener("mousemove", (e) => {
      let rect = button.getBoundingClientRect();
      // @ts-ignore
      let x = e.clientX - rect.left;
      // @ts-ignore
      let y = e.clientY - rect.top;
      // @ts-ignore
      button.style.setProperty("--x", x + "px");
      // @ts-ignore
      button.style.setProperty("--y", y + "px");
    });
  });

  function animateElements() {
    hiddenElements.forEach((element) => {
      var windowHeight = window.innerHeight;
      var elementTop = element.getBoundingClientRect().top;
      var elementVisible = 150;

      if (elementTop < windowHeight - elementVisible) {
        element.classList.add("show");
        element.classList.remove("hidden");
      } else {
        element.classList.remove("show");
        element.classList.add("hidden");
      }
    });
  }

  const hiddenElements = document.querySelectorAll(".hidden");
  window.addEventListener("scroll", animateElements);
  window.addEventListener("load", animateElements);
</script>

<style lang="scss">
  @use "../../assets/scss/base/_breakpoint" as *;
  @use "../../assets/scss/base/_mixins" as *;

  section {
    padding: 3rem 0;

    div.container {
      @include flex-column(center);
      gap: 2rem;

      .skill-set {
        @include flex-column(center);
        gap: 1.1rem;
        align-items: stretch;
        flex-wrap: wrap;

        @include breakpoint(medium or large) {
          @include flex-row(center);
          background-color: transparent;
        }

        > div.skill {
          flex: 1 33%;
          @include flex-column(flex-start);
          padding: 2rem;

          @include breakpoint(large) {
            flex-basis: 0%;
          }

          h3 {
            letter-spacing: 2px;
            display: inline;
            font-weight: var(--base-text-weight-normal);
            font-size: 1rem;
            line-height: 2.5;
            margin: 0px;
          }

          p {
            color: #9ca1a7;
            line-height: 25px;
          }

          > div {
            width: 50px;
            height: 50px;
            transition: 0.2s linear;

            .icon {
              color: #39d353;
              transition: 0.2s linear;
            }
          }

          &:nth-child(1) {
            transition-delay: 50ms;
          }
          &:nth-child(2) {
            transition-delay: 200ms;
          }
          &:nth-child(3) {
            transition-delay: 400ms;
          }
          &:nth-child(4) {
            transition-delay: 600ms;
          }
        }

        > div.skill.hidden {
          opacity: 0;
          filter: blur(10px);
        }

        > div.skill.show {
          opacity: 1;
          filter: blur(0px);
          animation: slideInLeft 0.6s ease-in;
          transition: opacity 0.5s, filter 0.5s;
        }

        @keyframes fadeInLeft {
          0% {
            transform: translateX(-100px);
            opacity: 0;
          }
          40% {
            transform: translateX(20px);
            opacity: 0.5;
          }
          100% {
            transform: translateX(0);
            opacity: 1;
          }
        }
      }
    }
  }
  .mouse-cursor-gradient-tracking {
    position: relative;
    border: none;
    cursor: pointer;
    outline: none;
    overflow: hidden;

    &::before {
      --size: 0;
      content: "";
      position: absolute;
      left: var(--x);
      top: var(--y);
      width: var(--size);
      height: var(--size);
      background: radial-gradient(
        circle closest-side,
        rgba(#39d353, 0.3),
        transparent
      );
      transform: translate(-50%, -50%);
      transition: width 0.2s ease, height 0.2s ease;
    }

    &:hover::before {
      --size: 500px;
    }
  }
</style>
